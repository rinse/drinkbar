on: push

env:
  ENVIRONMENT_NAME: dev

jobs:
  deployInfra:
    runs-on: ubuntu-18.04
    environment: dev
    env:
      DOMAIN_ALIAS: ${{ secrets.DOMAIN_ALIAS }}
      CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Deployment
        run: |-
          cd infra
          ./deploy.bash cloudfront $ENVIRONMENT_NAME $DOMAIN_ALIAS $CERTIFICATE_ARN
          ./deploy.bash cognito $ENVIRONMENT_NAME $DOMAIN_ALIAS
          ./deploy.bash lambdaedge $ENVIRONMENT_NAME
          ./deploy.bash cloudfront $ENVIRONMENT_NAME

  deployDrinkbar:
    runs-on: ubuntu-18.04
    environment: dev
    needs: deployInfra
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Cache the global node_modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node_modules
      - name: Cache the node_modules of uchiyoso_logs
        uses: actions/cache@v2
        with:
          path: uchiyoso_logs/node_modules
          key: ${{ runner.os }}-uchiyoso_logs-node_modules-${{ hashFiles('uchiyoso_logs/package-lock.json') }}
          restore-keys: ${{ runner.os }}-uchiyoso_logs-node_modules
      - name: Deployment of frontend
        run: |-
          cd uchiyoso_logs
          npm -g i create-react-app
          npm install
          npm run deploy -- s3://drinkbar-frontend-$ENVIRONMENT_NAME
      - name: Deployment of static resources
        run: aws s3 sync --delete s3://drinkbar-scenario-resources-$ENVIRONMENT_NAME s3://drinkbar-frontend-$ENVIRONMENT_NAME/scenarios
