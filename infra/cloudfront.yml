AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  EnvironmentName:
    Type: String
  LambdaEdgeFunctionName:
    Type: String
    Default: drinkbarBasicAuthentication
  LambdaEdgeFunctionVersion:
    Type: Number
    Default: 0
  BucketName:   # !Sub "drinkbar-frontend${EnvironmentName}"
    Type: String
  CertificateArn:
    Type: String
    Default: ''
  DomainAlias:
    Type: String
    Default: ''

Conditions:
  IsDomainAliasNotDefined: !Equals [!Ref DomainAlias, '']
  IsLambdaEdgeFunctionNotDefined: !Equals [!Ref LambdaEdgeFunctionVersion, 0]
  IsCertificateArnNotDefined: !Equals [!Ref CertificateArn, '']

Resources:
  drinkbarS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  drinkbarBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - drinkbarS3Bucket
      - drinkbarOriginAccessIdentity
    Properties:
      Bucket: !Ref drinkbarS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DrinkBarCloudFrontBucketPolicy
            Action:
              - s3:GetObject
            Effect: Allow
            Resource: !Sub "${drinkbarS3Bucket.Arn}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${drinkbarOriginAccessIdentity}"

  drinkbarDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !If [IsDomainAliasNotDefined, !Ref AWS::NoValue, !Ref DomainAlias]
        Origins:
          - DomainName: !Sub "${BucketName}.s3-ap-northeast-1.amazonaws.com"
            Id: !Sub "S3-${BucketName}"
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${drinkbarOriginAccessIdentity}
        Enabled: true
        HttpVersion: http2
        Comment: !Sub "drinkbarDistribution${EnvironmentName}"
        DefaultCacheBehavior:
          TargetOriginId: !Sub "S3-${BucketName}"
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # Managed-CachingDisabled
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            - Fn::If:
                - IsLambdaEdgeFunctionNotDefined
                - !Ref AWS::NoValue
                - EventType: viewer-request
                  LambdaFunctionARN: !Sub "arn:aws:lambda:us-east-1:${AWS::AccountId}:function:${LambdaEdgeFunctionName}:${LambdaEdgeFunctionVersion}"
        DefaultRootObject: index.html
        PriceClass: PriceClass_200
        Restrictions:
          GeoRestriction:
            RestrictionType: none
        ViewerCertificate:
          Fn::If:
            - IsCertificateArnNotDefined
            - !Ref AWS::NoValue
            - AcmCertificateArn: !Ref CertificateArn
              SslSupportMethod: sni-only
              MinimumProtocolVersion: TLSv1.2_2019
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 10
            ResponseCode: 200
          - ErrorCode: 404
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 10
            ResponseCode: 200

  drinkbarOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub drinkbarOriginAccessIdentity${EnvironmentName}

Outputs:
  drinkbarDistributionDomainName:
    Value: !GetAtt drinkbarDistribution.DomainName
    Export:
      Name: !Sub drinkbarDistributionDomainName${EnvironmentName}
